1.列表(list)
^^^^^^^^^^^^^^^^


a.列表定义
--------------
列表是一系列按特定排列的元素组成的序列，在Python中用[]来表示

且同一个列表中可以有不同的数据类型

----

b.访问方法
---------------
列表中每个元素都有两个坐标表示

① 正序(从左到右，最左侧元素为0号)

② 反序(从右到左，最右侧为-1号，依次递减)

----

c.切片操作
-----------------
本质为取出一个子列表，构成一个新列表


格式：mylist[x=0:y=n+1:z=1]

(等式右边为默认参数，格式同range函数)

特殊情况：步长为负时，切片列表也会反向输出

----

d.切片操作在列表中的特殊应用
-------------------------------
包括插入，替换，删除(本质都是替换)

list1[n:n] = [1, 2, 3]			
 | 在第n个元素前插入[1, 2, 3]

list2[m:n] = [1, 2, 3]			
 | 在第m到第n-1个元素之间插入[1, 2, 3]

list3[n:n+1] = []				
 | 将第n个元素删去

*注：对于不连续的切片(步长不为1)，右边一定要为等长列表*

----

e.反向遍历操作
------------------------
①reversed函数，返回一个迭代器，需要转换为list型数据

②reverse方法，*直接操作原列表，结果将会改变原列表的值*

----

f.列表推导式
-----------------
例：x = [i for i in range(0,20)]

         ↓

	为i的运算式

----

g.列表自带方法
------------------
①insert方法

list1.insert(x, 'a')    
 | 在第x+1个元素前(第n个元素)插入'a'
	
   `insert方法不检查边界，可以在不正确的范围内工作`


②pop方法

list1.pop(x)			
 | 弹出第n+1个元素
	
   `pop方法检查边界，下标需要正确`


③extend和append方法

均可以向列表添加数据，但有所区别：


extend方法等价于列表的加法，将两个列表加成一个大列表  	
 | `list3 = list1.extend(list2)这样错误，因为等号右侧不返回值`

append方法等价于在列表末尾添加一个任意类型的数据		
 | `特殊情况：a.append(a),将形成闭合循环`


④删除元素

del命令：通过下标(或切片)删除元素

remove方法：通过值删除元素，*多个相同的值时只删除第一个*

----

h.常用操作
-------------------
len()函数
 | 求列表数据个数(即长度)

sorted函数
 | 将列表升序排序

zip()函数
 | 打包操作，将多个列表的相同下表分别打包生成元组(tuple)型数据  `只生成能生成的最多个元组`
  `返回一个zip对象，需要转换为list`

enumerate函数
 | 将列表的下标和元素打包成元组    
   `生成一个enumerate对象，需要转换为list`



